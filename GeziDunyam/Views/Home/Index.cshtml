@model HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}

<h1 class="my-4">
    @if (Model.SearchTerm != null)
    {
        <text>Arama Sonucu &quot;@Model.SearchTerm&quot;</text>
    }
    else
    {
        @(Model.Category == null ? "Gezi Dünyam" : $"Posts in \"{Model.Category.CategoryName}\"")
    }
</h1>

@if (!Model.Posts.Any() && Model.SearchTerm != null)
{
    <p class="my-3">Sonuç Bulunamadı !!!</p>
}

@foreach (var post in Model.Posts)
{
    <!-- Blog Post -->
    <div class="card mb-4 blog-post">
        @if (!string.IsNullOrEmpty(post.PhotoPath))
        {
            <img class="card-img-top" src="@Url.FeaturedImage(post.PhotoPath)" alt="Card image cap">
        }
        <div class="card-body">
            <h2 class="card-title">@post.Title</h2>

            <div class="blog-post-content">

                @Html.Raw(post.Content)
            </div>

            <a href="@Url.Action("Show","Post", new { id = post.Id, slug = post.Slug })" class="btn btn-primary mt-3">Daha Fazla &rarr;</a>
        </div>
        <div class="card-footer text-muted clearfix">
            <div class="float-right">
                @{ var commentCount = post.Comments.Count(x => x.State == CommentState.Approved); }
                <i class="fas fa-comments"></i>
                <a href="@Url.Action("Show","Post", new { id = post.Id, slug = post.Slug })#comments">
                    @commentCount Yorum@(commentCount != 1 ? "lar" : "" )
                </a>

            </div>
            @post.CreationTime.Value.ToShortDateString() tarihinde
            <a href="#">@(post.Author.DisplayName ?? "Anonymous")</a> yazdı.
        </div>
    </div>

}


<!-- Pagination -->
<nav aria-label="Page Number and Pagination">
    <div class="mb-3 text-center">
         @(Model.Posts.PageCount < Model.Posts.PageNumber ? 0 :
        Model.Posts.PageNumber) /  @Model.Posts.PageCount 
    </div>
    @Html.PagedListPager(Model.Posts, page => Url.Action("Index",
     new { page, q = Model.SearchTerm }), new PagedListRenderOptionsBase
     {
         ContainerDivClasses = new string[] { "pagination-container", "d-flex" },
         UlElementClasses = new string[] { "pagination", "mx-auto" },
         LiElementClasses = new string[] { "page-item" },
         PageClasses = new string[] { "page-link" },
         EllipsesElementClass = "page-link",
         LinkToFirstPageFormat = "&laquo;",
         LinkToLastPageFormat = "&raquo;",
         LinkToPreviousPageFormat = "&lsaquo;",
         LinkToNextPageFormat = "&rsaquo;",
         MaximumPageNumbersToDisplay = 5,
     })
</nav>



@section scripts {
    <script>
        $(".blog-post-content").each(function () {
            if ($(this).outerHeight() >= 400) {
                $(this).addClass("long-text");
            }
        });
    </script>
}
